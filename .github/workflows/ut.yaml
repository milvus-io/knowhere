name: Unit Test

# This workflow is triggered on pushes or pull request to the repository.
on:
  push:
    branches:
      - main
  pull_request:
    # File paths to consider in the event. Optional; defaults to all.
    paths:
      - 'knowhere/**'
      - 'python/**'
      - 'unittest/**'
      - 'thirdparty/**'
      - 'build/**'
      - 'build-support/**'
      - 'cmake/**'
      - 'scripts/**'
      - '.github/workflows/ut.yaml'
      - 'build.sh'
      - 'CMakeLists.txt'
      - 'Makefile'
      - '!**.md'

jobs:
  ut:
    name: Unit Test on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    timeout-minutes: 60
    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-18.04, macos-11, centos7 ]
    env:
      INSTALL_OPENBLAS: true
      LD_LIBRARY_PATH: "${LD_LIBRARY_PATH}:/usr/lib"
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Install Dependency
        run: |
          ./scripts/install_deps.sh
      - name: Cpplint & Clang-format check
        if: ${{ matrix.os == 'ubuntu-18.04' }}
        run: |
          ./build.sh -l
      - name: Run Unittest
        run: |
          ./build.sh -t Release -u
          if [[ -f "output/unittest/faiss_test" ]]; then
            ./output/unittest/faiss_test
          fi
          ./output/unittest/test_knowhere

  swig-build:
    name: Python3 SWIG compile
    runs-on: ubuntu-20.04
    timeout-minutes: 60
  steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Install Dependency
      run: |
        ./scripts/install_dep.sh
    - name: Build
      run: |
        ./build.sh -t Release -u
    - name: Swig Compile
      run: |
        cd python && python3 setup.py bdist_wheel


  ut-msys:
    name: Unit Test on MSYS
    runs-on: windows-2019
    timeout-minutes: 60
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Configure Toolchain
        uses: msys2/setup-msys2@v2
        with:
          msystem: mingw64
      - name: Install Dependency
        shell: msys2 {0}
        run: |
          ./scripts/install_deps.sh
      - name: Run Unittest
        shell: msys2 {0}
        run: |
          ./build.sh -t Release -u
          cp -fr output/lib/*.dll output/unittest/
          ./output/unittest/faiss_test
          ./output/unittest/test_knowhere
